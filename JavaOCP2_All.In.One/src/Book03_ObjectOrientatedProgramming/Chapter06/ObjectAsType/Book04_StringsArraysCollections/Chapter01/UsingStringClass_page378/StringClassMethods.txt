String Class Methods
Method Description
char charAt(int) Returns the character at the specified position in the string.
int compareTo(String) Compares this string to another string, using alphabetical
order. Returns -1 if this string comes before the other string, 0
if the strings are the same, and 1 if this string comes after the
other string.
int compareToIgnoreCase(String) Similar to compareTo but ignores case.
boolean contains(CharSequence) Returns true if this string contains the parameter value.
The parameter can be a String, StringBuilder, or
StringBuffer.
boolean endsWith(String) Returns true if this string ends with the parameter string.
boolean equals(String) Returns true if this string has the same value as the
parameter string.
boolean
equalsIgnoreCase(String)
Similar to equals but ignores case.
int indexOf(char) Returns the index of the first occurrence of the char parameter
in this string. Returns -1 if the character isn’t in the string.
int indexOf(String) Returns the index of the first occurrence of the String
parameter in this string. Returns -1 if the string isn’t in
this string.
int indexOf(String, int start) Similar to indexOf, but starts the search at the specified
position in the string.
int lastIndexOf(char) Returns the index of the last occurrence of the char parameter
in this string. Returns -1 if the character isn’t in the string.
int lastIndexOf(String) Returns the index of the last occurrence of the String
parameter in this string. Returns -1 if the string isn’t in
this string.
int lastIndexOf(String, int) Similar to lastIndexOf, but starts the search at the specified
position in the string.
int length() Returns the length of this string.
String replace(char, char) Returns a new string that’s based on the original string, but with
every occurrence of the first parameter replaced by the second
parameter.
String replaceAll(String old,
String new)
Returns a new string that’s based on the original string, but
with every occurrence of the first string replaced by the second
parameter. Note that the first parameter can be a regular
expression.
String replaceFirst(String
old, String new)
Returns a new string that’s based on the original string, but with
the first occurrence of the first string replaced by the second
parameter. Note that the first parameter can be a regular
expression.
String[] split(String) Splits the string into an array of strings, using the string
parameter as a pattern to determine where to split the strings.
boolean startsWith(String) Returns true if this string starts with the parameter string.
boolean startsWith(String, int) Returns true if this string contains the parameter string at the
position indicated by the int parameter.
String substring(int) Extracts a substring from this string, beginning at the position
indicated by the int parameter and continuing to the end of
the string.
String substring(int, int) Extracts a substring from this string, beginning at the position
indicated by the first parameter and ending at the position one
character before the value of the second parameter.
char[] toCharArray() Converts the string to an array of individual characters.
String toLowerCase() Converts the string to lowercase.
String toString() Returns the string as a String (pretty pointless, if you ask me,
but all classes must have a toString method).
String toUpperCase() Converts the string to uppercase.
String trim() Returns a copy of the string with all leading and trailing white
spaces removed.
String valueOf(primitiveType) Returns a string representation of any primitive type