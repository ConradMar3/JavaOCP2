/*
 A JAR file is a single file that can contain more than one class in a compressed
 format that the Java Runtime Environment can access quickly. (JAR stands for
 Java archive.) A JAR file can have just a few classes in it, or thousands. In fact, the
 entire Java API is stored in a single JAR file named rt.java. (The rt stands for
 runtime.) It’s a pretty big file — over 35 MB — but that’s not bad, considering that
 it contains more than 12,000 classes.

 JAR files are created by the jar utility, which you find in the Java bin directory
 along with the other Java command-line tools, such as java and javac. JAR files
 are similar in format to Zip files, a compressed format made popular by the PK-ZIP
 program. The main difference is that JAR files contain a special file, called the
 manifest file, that contains information about the files in the archive. This manifest
 is automatically created by the jar utility, but you can supply a manifest of your
 own to provide additional information about the archived files.

 JAR files are the normal way to distribute finished Java applications. After finishing your application,
 you run the jar command from a command prompt to prepare the JAR file.
 Then, another user can copy the JAR file to his or her computer.
 The user can then run the application directly from the JAR file.

 JAR files are also used to distribute class libraries. You can add a JAR file to the
 ClassPath environment variable. Then the classes in the JAR file are automatically
 available to any Java program that imports the package that contains the classes.
*/